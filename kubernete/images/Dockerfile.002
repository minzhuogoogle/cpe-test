# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Includes go and gcloud
FROM ubuntu
LABEL maintainer="mzhuo@google.com"

# add env we can debug with the image name:tag
ARG IMAGE_ARG
ENV IMAGE=${IMAGE_ARG}

RUN apt-get update && apt-get install -y \
    fio  \
    git \
    make gcc libc6-dev libssl-dev zlib1g-dev python \
    nfs-common \
    python \
    python-dev \
    python3 \
    python3-dev \
    rsync \
    wget && \
    apt-get clean

# Install gcloud

ENV PATH=/google-cloud-sdk/bin:/workspace:${PATH} \
    CLOUDSDK_CORE_DISABLE_PROMPTS=0

WORKDIR /workspace

RUN wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz && \
    tar xzf google-cloud-sdk.tar.gz -C / && \
    rm google-cloud-sdk.tar.gz && \
    /google-cloud-sdk/install.sh \
        --disable-installation-options \
        --bash-completion=false \
        --path-update=false \
        --usage-reporting=false && \
    gcloud components install alpha beta kubectl && \
    gcloud info | tee /workspace/gcloud-info.txt  && \
    git clone https://github.com/minzhuogoogle/storage-performance.git && \
    cd storage-performance; chmod 777 *.*  \
    wget https://bootstrap.pypa.io/get-pip.py \
    python get-pip.py \
    pip install --upgrade google-cloud-storage \
    wget https://github.com/GoogleCloudPlatform/python-docs-samples/blob/master/iot/api-client/mqtt_example/requirements.txt  \
    pip install -r requirements.txt \
    openssl req -x509 -newkey rsa:2048 -keyout rsa_private.pem -nodes -out rsa_cert.pem -subj "/CN=unused" \
    gcloud iot devices create fio_client_2 --project=cpe-performance-storage --region=us-central1 --registry=fio_result --public-key path=rsa_cert.pem,type=rs256


#    gcloud auth activate-service-account --key-file cpe-performance-storage-dd837c6c8178.json


#ADD runner /
ENTRYPOINT ["/bin/bash"]
#, "/runner"]
